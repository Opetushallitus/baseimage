name: Baseimage

on:
  workflow_dispatch:
  schedule:
    - cron: '0 5 * * 1'
  push:
    paths-ignore:
      - '**.md'

jobs:
  build-and-deploy-container-image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up variables
        shell: bash
        run: |
          export ECR_REPO=190073735177.dkr.ecr.eu-west-1.amazonaws.com/utility
          export IMAGE_LABEL=ga-${GITHUB_RUN_NUMBER}
          echo "ecr_repo=${ECR_REPO}" >> $GITHUB_ENV
          echo "image_label=${IMAGE_LABEL}" >> $GITHUB_ENV
          echo "docker_target=${ECR_REPO}/baseimage:${IMAGE_LABEL}" >> $GITHUB_ENV
      - name: Build container image
        shell: bash
        env:
          DOCKER_TARGET: ${{ env.docker_target }}
          ECR_REPO: ${{ env.ecr_repo }}
          IMAGE_LABEL: ${{ env.image_label }}
        run: |
          export BUILD_TIME=$(date --iso-8601=seconds)
          docker build --label BaseimageType="fatjar-openjdk8" --label BaseimageBuildNumber=${IMAGE_LABEL} --label BaseimageBuildTime=${BUILD_TIME} -t ${ECR_REPO}/baseimage-fatjar-openjdk8:${IMAGE_LABEL} --build-arg OPENJDK_VERSION=openjdk8 --build-arg SERVICE_KIND=fatjar --build-arg TOMCAT_VERSION=tomcat7 .
          docker build --label BaseimageType="fatjar-openjdk11" --label BaseimageBuildNumber=${IMAGE_LABEL} --label BaseimageBuildTime=${BUILD_TIME} -t ${ECR_REPO}/baseimage-fatjar-openjdk11:${IMAGE_LABEL} --build-arg OPENJDK_VERSION=openjdk11 --build-arg SERVICE_KIND=fatjar --build-arg TOMCAT_VERSION=tomcat7 .
          docker build -f Dockerfile-corretto --label BaseimageType="fatjar-openjdk17" --label BaseimageBuildNumber=${IMAGE_LABEL} --label BaseimageBuildTime=${BUILD_TIME} -t ${ECR_REPO}/baseimage-fatjar-openjdk17:${IMAGE_LABEL} --build-arg OPENJDK_VERSION=17 --build-arg SERVICE_KIND=fatjar --build-arg TOMCAT_VERSION=tomcat7 .
          docker build --label BaseimageType="war-openjdk8" --label BaseimageBuildNumber=${IMAGE_LABEL} --label BaseimageBuildTime=${BUILD_TIME} -t ${ECR_REPO}/baseimage-war-openjdk8:${IMAGE_LABEL} --build-arg OPENJDK_VERSION=openjdk8 --build-arg SERVICE_KIND=war --build-arg TOMCAT_VERSION=tomcat7 .
          docker build --label BaseimageType="war-tomcat8-openjdk8" --label BaseimageBuildNumber=${IMAGE_LABEL} --label BaseimageBuildTime=${BUILD_TIME} -t ${ECR_REPO}/baseimage-war-tomcat8-openjdk8:${IMAGE_LABEL} --build-arg OPENJDK_VERSION=openjdk8 --build-arg SERVICE_KIND=war-tomcat8 --build-arg TOMCAT_VERSION=tomcat8 .
          docker build --label BaseimageType="war-openjdk11" --label BaseimageBuildNumber=${IMAGE_LABEL} --label BaseimageBuildTime=${BUILD_TIME} -t ${ECR_REPO}/baseimage-war-openjdk11:${IMAGE_LABEL} --build-arg OPENJDK_VERSION=openjdk11 --build-arg SERVICE_KIND=war --build-arg TOMCAT_VERSION=tomcat7 .
          docker build --label BaseimageType="war-tomcat8-openjdk11" --label BaseimageBuildNumber=${IMAGE_LABEL} --label BaseimageBuildTime=${BUILD_TIME} -t ${ECR_REPO}/baseimage-war-tomcat8-openjdk11:${IMAGE_LABEL} --build-arg OPENJDK_VERSION=openjdk11 --build-arg SERVICE_KIND=war-tomcat8 --build-arg TOMCAT_VERSION=tomcat8 .
          docker build -f Dockerfile-corretto-v2 --label BaseimageType="fatjar-openjdk8-corretto" --label BaseimageBuildNumber=${IMAGE_LABEL} --label BaseimageBuildTime=${BUILD_TIME} -t ${ECR_REPO}/baseimage-fatjar-openjdk8-corretto:${IMAGE_LABEL} --build-arg OPENJDK_VERSION=8 --build-arg SERVICE_KIND=fatjar --build-arg TOMCAT_VERSION=tomcat7 .
          docker build -f Dockerfile-corretto-v2 --label BaseimageType="fatjar-openjdk11-corretto" --label BaseimageBuildNumber=${IMAGE_LABEL} --label BaseimageBuildTime=${BUILD_TIME} -t ${ECR_REPO}/baseimage-fatjar-openjdk11-corretto:${IMAGE_LABEL} --build-arg OPENJDK_VERSION=11 --build-arg SERVICE_KIND=fatjar --build-arg TOMCAT_VERSION=tomcat7 .
          docker build -f Dockerfile-corretto-v2 --label BaseimageType="fatjar-openjdk17-corretto" --label BaseimageBuildNumber=${IMAGE_LABEL} --label BaseimageBuildTime=${BUILD_TIME} -t ${ECR_REPO}/baseimage-fatjar-openjdk17-corretto:${IMAGE_LABEL} --build-arg OPENJDK_VERSION=17 --build-arg SERVICE_KIND=fatjar --build-arg TOMCAT_VERSION=tomcat7 .
          docker build -f Dockerfile-corretto-v2 --label BaseimageType="war-tomcat8-openjdk8-corretto" --label BaseimageBuildNumber=${IMAGE_LABEL} --label BaseimageBuildTime=${BUILD_TIME} -t ${ECR_REPO}/baseimage-war-tomcat8-openjdk8-corretto:${IMAGE_LABEL} --build-arg OPENJDK_VERSION=8 --build-arg SERVICE_KIND=war-tomcat8 --build-arg TOMCAT_VERSION=tomcat8 .
          docker build -f Dockerfile-corretto-v2 --label BaseimageType="war-openjdk8-corretto" --label BaseimageBuildNumber=${IMAGE_LABEL} --label BaseimageBuildTime=${BUILD_TIME} -t ${ECR_REPO}/baseimage-war-openjdk8-corretto:${IMAGE_LABEL} --build-arg OPENJDK_VERSION=8 --build-arg SERVICE_KIND=war --build-arg TOMCAT_VERSION=tomcat7 .
          docker build -f Dockerfile-corretto-v2 --label BaseimageType="war-openjdk11-corretto" --label BaseimageBuildNumber=${IMAGE_LABEL} --label BaseimageBuildTime=${BUILD_TIME} -t ${ECR_REPO}/baseimage-war-openjdk11-corretto:${IMAGE_LABEL} --build-arg OPENJDK_VERSION=11 --build-arg SERVICE_KIND=war --build-arg TOMCAT_VERSION=tomcat7 .
          docker build -f Dockerfile-corretto-v2 --label BaseimageType="war-tomcat8-openjdk11-corretto" --label BaseimageBuildNumber=${IMAGE_LABEL} --label BaseimageBuildTime=${BUILD_TIME} -t ${ECR_REPO}/baseimage-war-tomcat8-openjdk11-corretto:${IMAGE_LABEL} --build-arg OPENJDK_VERSION=11 --build-arg SERVICE_KIND=war-tomcat8 --build-arg TOMCAT_VERSION=tomcat8 .          

      - name: Version check
        if: ${{ github.event_name == 'schedule' }}
        shell: bash
        env:
          ECR_REPO: ${{ env.ecr_repo }}
          IMAGE_LABEL: ${{ env.image_label }}
          PILVIKEHITYS_FLOW_TOKEN: ${{ secrets.PILVIKEHITYS_FLOW_TOKEN }}
        run: |
          $(pwd)/version_check/version_check.sh
      - name: Deploy container image to ECR
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          ECR_REPO: ${{ env.ecr_repo }}
        run: |
          git clone https://github.com/Opetushallitus/ci-tools.git
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 190073735177.dkr.ecr.eu-west-1.amazonaws.com
          ./ci-tools/github-build/upload-image.sh baseimage-fatjar-openjdk8 ${GITHUB_REF_NAME}
          ./ci-tools/github-build/upload-image.sh baseimage-fatjar-openjdk11 ${GITHUB_REF_NAME}
          ./ci-tools/github-build/upload-image.sh baseimage-fatjar-openjdk17 ${GITHUB_REF_NAME}
          ./ci-tools/github-build/upload-image.sh baseimage-war-openjdk8 ${GITHUB_REF_NAME}
          ./ci-tools/github-build/upload-image.sh baseimage-war-tomcat8-openjdk8 ${GITHUB_REF_NAME}
          ./ci-tools/github-build/upload-image.sh baseimage-war-openjdk11 ${GITHUB_REF_NAME}
          ./ci-tools/github-build/upload-image.sh baseimage-war-tomcat8-openjdk11 ${GITHUB_REF_NAME}
          ./ci-tools/github-build/upload-image.sh baseimage-fatjar-openjdk8-corretto ${GITHUB_REF_NAME}
          ./ci-tools/github-build/upload-image.sh baseimage-fatjar-openjdk11-corretto ${GITHUB_REF_NAME}
          ./ci-tools/github-build/upload-image.sh baseimage-fatjar-openjdk17-corretto ${GITHUB_REF_NAME}
          ./ci-tools/github-build/upload-image.sh baseimage-war-tomcat8-openjdk8-corretto ${GITHUB_REF_NAME}
          ./ci-tools/github-build/upload-image.sh baseimage-war-tomcat8-openjdk11-corretto ${GITHUB_REF_NAME}
          ./ci-tools/github-build/upload-image.sh baseimage-war-openjdk11-corretto ${GITHUB_REF_NAME}
